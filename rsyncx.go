package main

import (
	"flag"
	"fmt"
	"github.com/sarthakn7/rsyncx/changeapplier"
	"github.com/sarthakn7/rsyncx/changefinder"
	"time"
)

const (
	createPlan = "cp"
	applyPlan  = "ap"
)

func main() {
	none := "NA"
	source := flag.String("src", none, "Source directory path")
	destination := flag.String("dest", none, "Destination directory path")
	operation := flag.String("op", createPlan, "Operation to perform: fc to find changes, ac to apply changes")
	changePlanFile := flag.String("cf", none, "Path to file containing planned changes, required to apply the plan")

	flag.Parse()

	validateFlags(source, destination, operation, changePlanFile, none)

	if *changePlanFile == none {
		*changePlanFile = createChangeFileName()
	}

	switch *operation {
	case createPlan:
		{
			changefinder.FindChanges(source, destination, changePlanFile)
			changeFinderMessage(changePlanFile)
		}
	case applyPlan:
		{
			changeapplier.ApplyPlan(source, destination, changePlanFile)
			applyPlanMessage(changePlanFile)
		}
	}
}

func validateFlags(source *string, destination *string, operation *string, changeFile *string, none string) {
	if *source == none {
		panic("Please provide the source path")
	}
	if *destination == none {
		panic("Please provide the destination path")
	}
	if *operation != createPlan && *operation != applyPlan {
		panic("Please provide a valid operation (fc or ac)")
	}
	if *operation == applyPlan && *changeFile == none {
		panic("Please provide the path to the file containing changes generated by running fc operation")
	}
}

func createChangeFileName() string {
	return time.Now().String() + "_change_plan"
}

func changeFinderMessage(changePlanFile *string) {
	fmt.Println("Plan has been generated at %s, human-readable file can be found at %s", changePlanFile, *changePlanFile+".txt")
}

func applyPlanMessage(changePlanFile *string) {
	fmt.Println("The changes from %s have been applied", changePlanFile)
}
